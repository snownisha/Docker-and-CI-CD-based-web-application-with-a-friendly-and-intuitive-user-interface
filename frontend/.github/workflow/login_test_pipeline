name: front-end-final pipeline for login_test_pipeline

on:
  push:
    branches: [ "front-end-final" ]
  pull_request:
    branches: [ "front-end-final" ]



jobs:
   test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v2
    # In this step, this action saves a list of existing images,
    # the cache is created without them in the post run.
    # It also restores the cache if it exists.
    - uses: satackey/action-docker-layer-caching@v0.0.11
      # Ignore the failure of a step and avoid terminating the job.
      continue-on-error: true

    - name: Run docker compose locally
      run: docker-compose -f ci-compose.yaml up -d

    - run: python -m pip install selenium &&  python script.py
    - name: Send mail
      if: failure()
      uses: dawidd6/action-send-mail@v2
      with:
        # mail server settings
        server_address: smtp.gmail.com
        server_port: 465
        # user credentials
        #just for fun
        username: ${{ secrets.EMAIL_USERNAME }}
        password: ${{ secrets.EMAIL_PASSWORD }}
        # email subject
        subject: ${{ github.job }} job of ${{ github.repository }} has ${{ job.status }}
        # email body as text
        body: ${{ github.job }} job in worflow ${{ github.workflow }} of ${{ github.repository }} has ${{ job.status }}
        # comma-separated string, send email to
        to: pawant370@gmail.com,sanket.patil609@gmail.com
        # from email name
        from: coffeeappcme3project@gmail.com

  build:

    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    # In this step, this action saves a list of existing images,
    # the cache is created without them in the post run.
    # It also restores the cache if it exists.
    - uses: satackey/action-docker-layer-caching@v0.0.11
      # Ignore the failure of a step and avoid terminating the job.
      continue-on-error: true
    - name: Build and push docker image
      uses: mr-smithers-excellent/docker-build-push@v4
      with:
        image: coffeeappcme3project/docker-images
        registry: docker.io
        tag: latest
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
      
